/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.QuanLyDoanRa.Domain;
using Vns.QuanLyDoanRa.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
using NHibernate.Criterion;
using Vns.QuanLyDoanRa.Domain.Report;
using NHibernate.Transform;
namespace Vns.QuanLyDoanRa.Dao.NHibernate
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>
    //[Serializable]
    public sealed class VnsQuyetToanDoanDao : GenericDao<VnsQuyetToanDoan, Guid>, IVnsQuyetToanDoanDao
    {
        public IList<VnsQuyetToanDoan> GetByDoanCongTac(Guid CongTacId, Decimal LanQuyetToan)
        {
            String sql = "Select qt.id as id, qt.LichCongTacId as LichCongTacId, qt.CongTacId as CongTacId, " +
                         "qt.MucId as MucId, qt.TenKhoanChi as TenKhoanChi, " +
                         "qt.SoTien as SoTien, qt.SoTienVND as SoTienVND, " + 
                         "qt.DienGiai as DienGiai, " +
                         "qt.NgayCt as NgayCt, qt.NgayHt as NgayHt, qt.TkId as TkId, qt.MaTk as MaTk, qt.TenTk as TenTk, qt.TyGia as TyGia, qt.SoTienVND as SoTienVND, " + 
                         "qt.LanQuyetToan as LanQuyetToan, qt.ChungTuId as ChungTuId " +
                         "from VnsQuyetToanDoan qt " +
                         "Inner Join qt.objMucTieuMuc m " +
                         "where qt.CongTacId = :CongTacId " +
                         (LanQuyetToan == -1 ? "" : " and qt.LanQuyetToan = :LanQuyetToan ") +
                         "Order by m.MaMuc ASC";
            IQuery q = Session.CreateQuery(sql);
            q.SetParameter("CongTacId", CongTacId);
            if (LanQuyetToan != -1) q.SetParameter("LanQuyetToan", LanQuyetToan);
            q.SetResultTransformer(Transformers.AliasToBean<VnsQuyetToanDoan>());
            return q.List<VnsQuyetToanDoan>();
        }

        public IList<VnsQuyetToanDoan> GetByDoanCongTac(Guid CongTacId)
        {
            return GetByDoanCongTac(CongTacId, -1);
        }

        public Boolean DeleteByDoanCtId(Guid CongTacId)
        {
            String sql = " delete from VnsQuyetToanDoan a where " +
                         " a.CongTacId=:CongTacId ";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("CongTacId", CongTacId);
            int i = q.ExecuteUpdate();

            return true;
        }

        public IList<VnsInQtTu> GetDataInQt(Guid CongTacId)
        {
            IList<VnsInQtTu> lst = new List<VnsInQtTu>();
            string sql = "select " +
                            "m.IdMucCha as IdMucCha,' ' as MaMucCha , m.MaMuc as MaMuc,m.TenMuc as TenMuc," +
                            "qt.DienGiai as DienGiai, " +
                            "qt.SoTien as SoTien, qt.SoTienVND as SoTienVND, " +
                            "qt.TenKhoanChi as TenKhoanChi " +
                         "from VnsQuyetToanDoan qt " +
                         "inner join qt.objMucTieuMuc m " +
                         "where qt.CongTacId =:CongTacId ";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("CongTacId", CongTacId);
            q.SetResultTransformer(Transformers.AliasToBean<VnsInQtTu>());
            lst = q.List<VnsInQtTu>();
            return lst;
        }

        public IList<VnsInQtTu> GetDataInQTbyDoanCtac(Guid CongTacId, Decimal LanQuyetToan)
        {
            String sql = "select " +
                            "m.IdMucCha as IdMucCha,' ' as MaMucCha , m.MaMuc as MaMuc,m.TenMuc as TenMuc," +
                            "qt.DienGiai as DienGiai, " +
                            "qt.SoTien as SoTien, qt.SoTienVND as SoTienVND," + 
                            "qt.TenKhoanChi as TenKhoanChi " +
                         "from VnsQuyetToanDoan qt " +
                         "Inner Join qt.objMucTieuMuc m " +
                         "where qt.CongTacId = :CongTacId " +
                         (LanQuyetToan == -1 ? "" : " and qt.LanQuyetToan = :LanQuyetToan ") +
                         "Order by m.MaMuc ASC";
            IQuery q = Session.CreateQuery(sql);
            q.SetParameter("CongTacId", CongTacId);
            if (LanQuyetToan != -1) q.SetParameter("LanQuyetToan", LanQuyetToan);
            q.SetResultTransformer(Transformers.AliasToBean<VnsInQtTu>());
            return q.List<VnsInQtTu>();
        }

    }
}
