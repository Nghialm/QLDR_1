/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.QuanLyDoanRa.Domain;
using Vns.QuanLyDoanRa.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
using NHibernate.Criterion;
using NHibernate.Transform;
namespace Vns.QuanLyDoanRa.Dao.NHibernate
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
	/// </summary>
	//[Serializable]
	public sealed class VnsChungTuDao:GenericDao<VnsChungTu,Guid>,IVnsChungTuDao
	{
        public IList<VnsChungTu> LoadByChungTu(String MaLoaiChungTu)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsChungTu>();
            isearch.Add(Restrictions.Like("MaLoaiChungTu", MaLoaiChungTu, MatchMode.Start));

            return isearch.List<VnsChungTu>();
        }
        public IList<VnsChungTu> ListChungTuDenNgay(DateTime dNgayChungTu)
        {
            String sql = "from VnsChungTu ct where ct.NgayCt<=:dNgayChungTu";
            IQuery q = Session.CreateQuery(sql);
            q.SetParameter("dNgayChungTu", dNgayChungTu);
            return q.List<VnsChungTu>();
        }

        public IList<VnsChungTu> ListChungTuTuNgayDenNgay(DateTime dTuNgay,DateTime dDenNgay,string strMaLoaiChungTu)
        {
            String sql = "from VnsChungTu ct where (ct.NgayCt>=:dTuNgay and ct .NgayCt<=:dDenNgay)";
            if (strMaLoaiChungTu != string.Empty)
            {
                sql += " and ct.MaLoaiChungTu =: strMaLoaiChungTu";
            }
            IQuery q = Session.CreateQuery(sql);
            q.SetParameter("dTuNgay", dTuNgay);
            q.SetParameter("dDenNgay", dDenNgay);
            if (strMaLoaiChungTu != string.Empty)
                q.SetParameter("strMaLoaiChungTu", strMaLoaiChungTu);
            return q.List<VnsChungTu>();
        }

        public IList<VnsChungTu> SearchChungTu(String p_MaLoaiCt, DateTime p_TuNgay, DateTime p_DenNgay,String p_MaTkNo, String p_MaTkCo, Guid p_DoanRaId, Guid p_LoaiDoanRaId, Decimal p_SoTienTu, Decimal p_SoTienDen, String p_NguoiTamUng, String p_NoiDung)
        {
            string sql = "select DISTINCT ct.id as id, ct.NgayCt as NgayCt,ct.NgayHt as NgayHt, ct.SoCt as SoCt , ct.LoaiChungTutId as LoaiChungTutId, ct.MaLoaiChungTu as MaLoaiChungTu, ct.NoiDung as NoiDung, ct.NguoiLapPhieu as NguoiLapPhieu, ct.NguoiGiaoDich as NguoiGiaoDich " +
                         "from VnsChungTu ct " +
                         "inner join ct.LstGiaoDich gd " +
                         "where ct.NgayCt >=: p_TuNgay AND ct.NgayCt <=: p_DenNgay " +
                         (string.IsNullOrEmpty(p_MaTkNo) ? "" : "AND gd.MaTkNo like :p_MaTkNo ") +
                         (string.IsNullOrEmpty(p_MaTkCo) ? "" : "AND gd.MaTkCo like :p_MaTkCo ") +
                         (p_DoanRaId == new Guid() ? "" : "AND (gd.DoanRaNoId =: p_DoanRaId OR gd.DoanRaCoId =:p_DoanRaId) ") +
                         (p_LoaiDoanRaId == new Guid() ? "" : "AND (gd.LoaiDoanRaNoId =: p_LoaiDoanRaId OR gd.LoaiDoanRaCoId =:p_LoaiDoanRaId) ") +
                         (p_SoTienTu == 0 ? "" : "AND SoTienNt >=:p_SoTienTu ") +
                         (p_SoTienDen == 0 ? "" : "AND SoTienNt <=:p_SoTienDen ") +
                         (String.IsNullOrEmpty(p_NguoiTamUng) ? "" : "AND ct.NguoiGiaoDich like :p_NguoiTamUng ") +
                         (String.IsNullOrEmpty(p_NoiDung) ? "" : "AND ct.NoiDung like :p_NoiDung ") +
                         (String.IsNullOrEmpty(p_MaLoaiCt) ? "" : "AND ct.MaLoaiChungTu =: p_MaLoaiCt ") +
                         "Order by ct.NgayCt DESC, ct.MaLoaiChungTu ASC ";

            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("p_TuNgay", p_TuNgay);
            q.SetParameter("p_DenNgay", p_DenNgay);
            if (!String.IsNullOrEmpty(p_MaLoaiCt)) q.SetParameter("p_MaLoaiCt", p_MaLoaiCt);
            if (!String.IsNullOrEmpty(p_MaTkCo)) q.SetParameter("p_MaTkCo", p_MaTkCo + "%");
            if (!String.IsNullOrEmpty(p_MaTkNo)) q.SetParameter("p_MaTkNo", p_MaTkNo + "%");
            if (p_DoanRaId != new Guid()) q.SetParameter("p_DoanRaId", p_DoanRaId);
            if (p_LoaiDoanRaId != new Guid()) q.SetParameter("p_LoaiDoanRaId", p_LoaiDoanRaId);
            if (!String.IsNullOrEmpty(p_NguoiTamUng)) q.SetParameter("p_NguoiTamUng", "%" + p_NguoiTamUng + "%");
            if (!String.IsNullOrEmpty(p_NoiDung)) q.SetParameter("p_NoiDung", "%" + p_NoiDung + "%");
            if (!(p_SoTienTu == 0)) q.SetParameter("p_SoTienTu", p_SoTienTu);
            if (!(p_SoTienDen == 0)) q.SetParameter("p_SoTienDen", p_SoTienDen);
            q.SetResultTransformer(Transformers.AliasToBean<VnsChungTu>());
            return q.List<VnsChungTu>();
        }

        public Int32 GetRowCount(string p_maLoaiCt)
        {
            string sql = "select count(*) from VnsChungTu ct where ct.NhomCt =:p_maLoaiCt";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("p_maLoaiCt", p_maLoaiCt);            
            try
            {
                Int32 i = Convert.ToInt32(q.UniqueResult());
                return i;
            }
            catch
            {
                return 1;
            }
        }

        public void Delete_By_Id(Guid ChungTuId)
        {
            //Xoa giao dich
            String sqlDelGiaoDich = "delete VnsGiaoDich ct where ChungTuId = :ChungTuId";
            IQuery qgd = NHibernateSession.CreateQuery(sqlDelGiaoDich);
            qgd.SetParameter("ChungTuId", ChungTuId);
            qgd.ExecuteUpdate();

            //Xoa chung tu
            String sql = "delete VnsChungTu ct where Id = :ChungTuId";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("ChungTuId", ChungTuId);
            q.ExecuteUpdate();
        }
	}
}
