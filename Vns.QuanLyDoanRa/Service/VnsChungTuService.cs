/*
insert license info here
*/
using System.Collections;
using System.ComponentModel;
using System.Data;
using System;
using Vns.QuanLyDoanRa.Domain;
using Vns.QuanLyDoanRa.Dao;
using Vns.QuanLyDoanRa.Service.Interface;
using Vns.Erp.Core.Service;
using Vns.Erp.Core.Service.Interface;
using System.Collections.Generic;
namespace Vns.QuanLyDoanRa.Service
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>	
    //,IVnsChungTuService
    public class VnsChungTuService : GenericService<VnsChungTu, Guid>, IVnsChungTuService
    {
        public IVnsChungTuDao VnsChungTuDao
        {
            get { return (IVnsChungTuDao)Dao; }
            set { Dao = value; }
        }
        public IVnsGiaoDichDao VnsGiaoDichDao;

        public IList<VnsChungTu> LoadByChungTu(String MaLoaiChungTu)
        {
            return VnsChungTuDao.LoadByChungTu(MaLoaiChungTu);
        }

        public IList<VnsChungTu> ListChungTuDenNgay(DateTime dNgayChungTu)
        {
            return VnsChungTuDao.ListChungTuDenNgay(dNgayChungTu);
        }

        public IList<VnsChungTu> ListChungTuTuNgayDenNgay(DateTime dTuNgay, DateTime dDenNgay, string strMaLoaiChungTu)
        {
            return VnsChungTuDao.ListChungTuTuNgayDenNgay(dTuNgay, dDenNgay, strMaLoaiChungTu);
        }

        public IList<VnsChungTu> SearchChungTu(String p_MaLoaiCt, DateTime p_TuNgay, DateTime p_DenNgay, String p_MaTkNo, String p_MaTkCo, Guid p_DoanRaId, Guid p_LoaiDoanRaId, 
            Guid pNgoaiTeId,
            Decimal p_SoTienTu, Decimal p_SoTienDen,
            Decimal p_SoTienVndTu, Decimal p_SoTienVndDen, 
            String p_NguoiTamUng, String p_NoiDung)
        {
            return VnsChungTuDao.SearchChungTu(p_MaLoaiCt, p_TuNgay, p_DenNgay, p_MaTkNo, p_MaTkCo, p_DoanRaId, p_LoaiDoanRaId, 
                pNgoaiTeId,
                p_SoTienTu, p_SoTienDen, 
                p_SoTienVndTu, p_SoTienVndDen,
                p_NguoiTamUng, p_NoiDung);
        }

        public void DeleteChungTu(VnsChungTu objChungTu)
        {
            //VnsGiaoDichDao.DeleteByChungTu(objChungTu.Id);
            VnsChungTuDao.Delete_By_Id(objChungTu.Id);
        }

        public void SaveChungTu(Boolean InsertFlg, VnsChungTu objChungTu, IList<VnsGiaoDich> lstGiaoDich, IList<VnsGiaoDich> lstDeleteGiaoDich)
        {
            switch (InsertFlg)
            {
                case true:
                    VnsChungTuDao.Save(objChungTu);
                    break;
                case false:
                    //Guid abc = objChungTu.Id;
                    VnsChungTuDao.Merge(objChungTu);
                    break;
            }

            if (lstGiaoDich == null) lstGiaoDich = new List<VnsGiaoDich>();
            foreach (VnsGiaoDich gd in lstGiaoDich)
            {
                gd.ChungTuId = objChungTu.Id;
                VnsGiaoDichDao.Merge(gd);
            }

            if (lstDeleteGiaoDich == null) lstDeleteGiaoDich = new List<VnsGiaoDich>();
            foreach (VnsGiaoDich gd in lstDeleteGiaoDich)
            {
                if (gd.GiaoDichId != new Guid())
                    VnsGiaoDichDao.DeleteById(gd.GiaoDichId);
            }
        }

        public Int32 GetRowCount(string p_maLoaiCt)
        {
            return VnsChungTuDao.GetRowCount(p_maLoaiCt);
        }
    }
}
