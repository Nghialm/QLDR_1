/*
insert license info here
*/
using System;
using NHibernate;
using NHibernate.Cfg;
using Nullables;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Collections.Generic;
using Vns.Erp.Core.Dao.NHibernate;
using Vns.QuanLyDoanRa.Domain;
using Vns.QuanLyDoanRa.Dao;
using Vns.Erp.Core.Dao;
using Spring.Transaction.Interceptor;
using NHibernate.Criterion;
using NHibernate.Transform;
namespace Vns.QuanLyDoanRa.Dao.NHibernate
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo
    /// </summary>
    //[Serializable]
    public sealed class VnsGiaoDichDao : GenericDao<VnsGiaoDich, Guid>, IVnsGiaoDichDao
    {
        public IList<VnsGiaoDich> GetByChungTu(Guid ChungTuId)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>();
            isearch.Add(Restrictions.Eq("ChungTuId", ChungTuId));

            return isearch.List<VnsGiaoDich>();
        }


        public Boolean DeleteByChungTu(Guid ChungTuId)
        {
            string DeleteSQL = "Delete from VnsGiaoDich where ChungTuId = :ChungTuId";
            IQuery DeleteQuery = NHibernateSession.CreateQuery(DeleteSQL);
            DeleteQuery.SetParameter("ChungTuId", ChungTuId);

            int r = DeleteQuery.ExecuteUpdate();
            return r != 0;
        }

        public IList<VnsGiaoDich> GetByDoanRaCoId(Guid DoanRaCoId)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>();
            
            isearch.Add(Restrictions.Eq("DoanRaCoId", DoanRaCoId));
            return isearch.List<VnsGiaoDich>();
        }

        public IList<VnsGiaoDich> GetByDoanRaNoId(Guid DoanRaNoId)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>();            
            isearch.Add(Restrictions.Eq("DoanRaNoId", DoanRaNoId));
            return isearch.List<VnsGiaoDich>();
        }
        public IList<VnsGiaoDich> GetByMaTKNo(String strMaTKNo)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>();
            isearch.Add(Restrictions.Eq("MaTKNo", strMaTKNo));
            return isearch.List<VnsGiaoDich>();
        }
        public IList<VnsGiaoDich> GetByMaTKCo(string strMaTKCo)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>();
            isearch.Add(Restrictions.Eq("MaTKCo", strMaTKCo));
            return isearch.List<VnsGiaoDich>();
        }
        public IList<VnsGiaoDich> GetTUByDoanRaId(Guid p_DoanRaId)
        {
            string sql = "Select gd.DoanRaNoId as DoanRaNoId, gd.MaTkCo as MaTkCo," +
                         " gd.SoTien as SoTien, gd.SoTienNt as SoTienNt, gd.TyGia as TyGia,gd.ChungTuId as ChungTuId" +
                         " from VnsGiaoDich gd where gd.DoanRaCoId =: p_DoanRaId and gd.MaTkNo =: p_TkNo";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("p_DoanRaId", p_DoanRaId);
            q.SetParameter("p_TkNo", Globals.TkTamUng);
            q.SetResultTransformer(Transformers.AliasToBean<VnsGiaoDich>());
            return q.List<VnsGiaoDich>();
        }

        public IList<VnsGiaoDich> GetTUByDoanRaIdGroupByTyGia(Guid p_DoanRaId) 
        {
            string sql = " Select gd.MaTkCo as MaTkCo, Sum(gd.SoTien) as SoTien, Sum(gd.SoTienNt) as SoTienNt, gd.TyGia as TyGia, gd.NgoaiTeId as NgoaiTeId " +
                         " from VnsChungTu ct inner join ct.LstGiaoDich gd " + 
                         " where gd.DoanRaCoId =: p_DoanRaId and gd.MaTkNo =: p_TkNo " +
                         " and ct.TrangThai = 0 " +
                         " Group by gd.NgoaiTeId, gd.TyGia, gd.MaTkCo order by gd.TyGia ASC";
            IQuery q = NHibernateSession.CreateQuery(sql);
            q.SetParameter("p_DoanRaId", p_DoanRaId);
            q.SetParameter("p_TkNo", Globals.TkTamUng);
            q.SetResultTransformer(Transformers.AliasToBean<VnsGiaoDich>());
            return q.List<VnsGiaoDich>();
        }

        public IList<VnsGiaoDich> GetNhap4FIFO(DateTime TuNgay, DateTime DenNgay, Guid NguonId, String TkNo, String TkCo)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>().CreateAlias("objChungTu", "h");

            isearch.Add(Restrictions.Le("h.NgayCt", VnsConvert.CEndOfDate(DenNgay)));
            isearch.Add(Restrictions.Ge("h.NgayCt", VnsConvert.CStartOfDate(TuNgay)));
            isearch.Add(Restrictions.Eq("LoaiDoanRaNoId", NguonId));
            isearch.Add(Restrictions.Eq("MaTkNo", TkNo));
            if (!String.IsNullOrEmpty(TkCo)) isearch.Add(Restrictions.Eq("MaTkCo", TkCo));
            //isearch.Add(Restrictions.Gt("DuLuong", Convert.ToDecimal(0)));

            isearch.AddOrder(new Order("h.NgayCt", true));

            isearch.SetResultTransformer(Transformers.DistinctRootEntity);

            IList<VnsGiaoDich> lst = isearch.List<VnsGiaoDich>();
            return lst;
        }

        public IList<VnsGiaoDich> GetByDoanRa(Guid DoanRaid, String MaTkNo, String MaTkCo)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>().CreateAlias("objChungTu", "h");

            //isearch.Add(Restrictions.Le("h.NgayCt", VnsConvert.CEndOfDate(DenNgay)));
            //isearch.Add(Restrictions.Ge("h.NgayCt", VnsConvert.CStartOfDate(TuNgay)));
            isearch.Add(Restrictions.Eq("DoanRaNoId", DoanRaid));
            isearch.Add(Restrictions.Eq("MaTkNo", MaTkNo));
            isearch.Add(Restrictions.Eq("MaTkCo", MaTkCo));
            //if (!String.IsNullOrEmpty(TkCo)) isearch.Add(Restrictions.Eq("MaTkCo", TkCo));
            //isearch.Add(Restrictions.Gt("DuLuong", Convert.ToDecimal(0)));

            isearch.AddOrder(new Order("h.NgayCt", true));

            isearch.SetResultTransformer(Transformers.DistinctRootEntity);

            IList<VnsGiaoDich> lst = isearch.List<VnsGiaoDich>();
            return lst;
        }

        public IList<VnsGiaoDich> GetNhap4FIFO(DateTime TuNgay, DateTime DenNgay, Guid NguonId, String NghiepVu)
        {
            return GetNhap4FIFO(TuNgay, DenNgay, NguonId, NghiepVu, "");
            //ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>().CreateAlias("objChungTu", "h");

            //isearch.Add(Restrictions.Le("h.NgayCt", VnsConvert.CEndOfDate(DenNgay)));
            //isearch.Add(Restrictions.Ge("h.NgayCt", VnsConvert.CStartOfDate(TuNgay)));
            //isearch.Add(Restrictions.Eq("LoaiDoanRaNoId", NguonId));
            //isearch.Add(Restrictions.Eq("MaTkNo", NghiepVu));
            ////isearch.Add(Restrictions.Gt("DuLuong", Convert.ToDecimal(0)));

            //isearch.AddOrder(new Order("h.NgayCt", true));

            //isearch.SetResultTransformer(Transformers.DistinctRootEntity);

            //IList<VnsGiaoDich> lst = isearch.List<VnsGiaoDich>();
            //return lst;
        }

        public IList<VnsGiaoDich> GetBy(DateTime TuNgay, DateTime DenNgay, Guid NguonId, String NghiepVu)
        {
            ICriteria isearch = NHibernateSession.CreateCriteria<VnsGiaoDich>().CreateAlias("objChungTu", "h");

            isearch.Add(Restrictions.Le("h.NgayCt", VnsConvert.CEndOfDate(DenNgay)));
            isearch.Add(Restrictions.Ge("h.NgayCt", VnsConvert.CStartOfDate(TuNgay)));
            isearch.Add(Restrictions.Eq("LoaiDoanRaCoId", NguonId));
            isearch.Add(Restrictions.Eq("MaTkCo", NghiepVu));
            isearch.Add(Restrictions.Eq("TyGiaTuDong", Convert.ToDecimal(0))); //0: Khong dung ty gia tu dong

            isearch.AddOrder(new Order("h.NgayCt", true));

            isearch.SetResultTransformer(Transformers.DistinctRootEntity);

            IList<VnsGiaoDich> lst = isearch.List<VnsGiaoDich>();
            return lst;
        }
    }
}
