<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v10.2" name="DevExpress.Utils.v10.2, Version=10.2.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v10.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMC4yLCBWZXJzaW9uPTEwLjIu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAANsHAAACcAIAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAfVJREFU
        OE9j+P//PwMlmGTNzasihYCYGWYpSQY0LAvNaV8d979xedh/INsJZAjRBlQvDMhvXRHz//zd7f8PXF7y
        v3Zx8H+gmAfcgNJZXmy4wgIol1+/MOz/mVub/u+7MOn/0avz/u+/sPh/xRxfSADmT3apK5rq/h9EAzGK
        QUB+fuXsgP/Hr639v+Vkx/+1R2rBeMHO8v8FU9z+M2R221TUzwn/f+bmlv8zN5b9B/I3ArEHyGAgnV88
        2fP/oYvL/68+VPt/8Z5CMO4HhkNWjy1IrQ1DaqvF/91n5v6ftyP3/84z0/9vODz5f1an/f+kZtOKvF7n
        /3vPLfy/cFfR/xlbUsG4dXHI/+QWM5C8DTgQo6p1KzI6rP53rQr737Mm4v+CXaX/95xd+L9xTsz/bSdm
        /p+2OQ0sDsJVsz3/R9fo/QfqAWuGx0JwsVpXfL3B//pFXv8bl/j871wV8X/DsX6gpmgwH4QLJ9v/DylR
        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
</value>
  </data>
</root>