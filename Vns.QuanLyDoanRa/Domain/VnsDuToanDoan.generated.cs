/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.QuanLyDoanRa.Domain
{
    /// <summary>
    ///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
    /// </summary>


    [Serializable]
    [DataContract(Namespace = "http://Vns.QuanLyDoanRa", IsReference = true)]
    public partial class VnsDuToanDoan : DomainObject<Guid>, INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private Guid _dutoanid;
        private Guid _lichcongtacid;
        private Guid _congtacid;
        private Guid _mucid;
        private string _tenkhoanchi;
        private decimal _sotiendutoan;
        private string _diengiai;
        private DateTime _ngaydutoan;
        private int _LanDuToan = 0;
        private decimal _SoTienDuToanVND = 0;
        private Guid _NgoaiTeId;

        
        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public VnsDuToanDoan()
        {
            _dutoanid = new Guid();
            _lichcongtacid = new Guid();
            _congtacid = new Guid();
            _mucid = new Guid();
            _tenkhoanchi = String.Empty;
            _sotiendutoan = 0;
            _diengiai = String.Empty;
            _ngaydutoan = DateTime.MaxValue;
            _SoTienDuToanVND = 0;
            _NgoaiTeId = new Guid();
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid DuToanId
        {
            get { return _dutoanid; }
            set { _isChanged |= (_dutoanid != value); _dutoanid = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid LichCongTacId
        {
            get { return _lichcongtacid; }
            set { _isChanged |= (_lichcongtacid != value); _lichcongtacid = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid CongTacId
        {
            get { return _congtacid; }
            set { _isChanged |= (_congtacid != value); _congtacid = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public Guid MucId
        {
            get { return _mucid; }
            set { _isChanged |= (_mucid != value); _mucid = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string TenKhoanChi
        {
            get { return _tenkhoanchi; }
            set
            {
                if (value != null)
                    if (value.Length > 256)
                        throw new ArgumentOutOfRangeException("Invalid value for TenKhoanChi", value, value.ToString());

                _isChanged |= (_tenkhoanchi != value); _tenkhoanchi = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public decimal SoTienDuToan
        {
            get { return _sotiendutoan; }
            set { _isChanged |= (_sotiendutoan != value); _sotiendutoan = value; }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public string DienGiai
        {
            get { return _diengiai; }
            set
            {
                if (value != null)
                    if (value.Length > 512)
                        throw new ArgumentOutOfRangeException("Invalid value for DienGiai", value, value.ToString());

                _isChanged |= (_diengiai != value); _diengiai = value;
            }
        }


        /// <summary>
        /// 
        /// </summary>		

        [DataMember]
        public DateTime NgayDuToan
        {
            get { return _ngaydutoan; }
            set { _isChanged |= (_ngaydutoan != value); _ngaydutoan = value; }
        }

        [DataMember]
        public int LanDuToan
        {
            get { return _LanDuToan; }
            set { _isChanged |= (_LanDuToan != value); _LanDuToan = value; }
        }



        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsChanged
        {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
        }

        public decimal SoTienDuToanVND
        {
            get { return _SoTienDuToanVND; }
            set { _SoTienDuToanVND = value; }
        }


        public Guid NgoaiTeId
        {
            get { return _NgoaiTeId; }
            set { _NgoaiTeId = value; }
        }
        #endregion


        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public void MarkAsDeleted()
        {
            _isDeleted = true;
            _isChanged = true;
        }


        #endregion


        #region Equals And HashCode Overrides
        /// <summary>
        /// local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj)
        {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            VnsDuToanDoan castObj = (VnsDuToanDoan)obj;
            return (castObj != null) &&
                (this._dutoanid == castObj.DuToanId);
        }

        /// <summary>
        /// local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode()
        {

            int hash = 57;
            hash = 27 * hash * _dutoanid.GetHashCode();
            return hash;
        }
        #endregion

    }
}
