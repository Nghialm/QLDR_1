/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
using System.Collections.Generic;
namespace Vns.QuanLyDoanRa.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	public partial class VnsDoanCongTac : DomainObject<Guid>
	{
        private VnsLoaiDoanRa _LoaiDoanRa;

        public VnsLoaiDoanRa LoaiDoanRa
        {
            get { return _LoaiDoanRa; }
            set { _LoaiDoanRa = value; }
        }

        public String TenLoaiDoanRa
        {
            get
            {
                if (_LoaiDoanRa != null)
                {
                    return _LoaiDoanRa.TenLoaiDoanRa;
                }
                return null;
            }
        }
        
        public int NamCongTac
        {
            get
            {
                return NgayDuyetDuToan.Year;
            }

        }
                
        public int ThangCongTac
        {
            get
            {
                return NgayDuyetDuToan.Month;
            }

        }

        public int NamQuyetToan
        {
            get
            {
                return NgayQuyetToan.Year;
            }
        }
        public int ThangQuyetToan
        {
            get
            {
                return NgayQuyetToan.Month;
            }
        }
        public int NamDiCT
        {
            get
            {
                return NgayDi.Year;
            }
        }
        public int ThangDiCT
        {
            get
            {
                return NgayDi.Month;
            }
        }

        public string strNgayQuyetToan
        {
            get
            {   
                if (NgayQuyetToan != DateTime.MaxValue)
                {
                    return NgayQuyetToan.ToString("dd/MM/yyyy");
                }
                else
                    return string.Empty;
            }
        }

        public string strNgayDuToan
        {
            get
            {
                if (NgayDuyetDuToan != DateTime.MaxValue)
                {
                    return NgayDuyetDuToan.ToString("dd/MM/yyyy");
                }
                else
                    return string.Empty;
            }
        }

        public string NuocCongTac
        {
            get 
            {
                return GetLichCongTac(_DanhSachLichCongTac);
            }
        }

        private string GetLichCongTac(IList<VnsLichCongTac> lst)
        {
            string lct = "";
            foreach (VnsLichCongTac obj in lst)
            {
                if (lct == "")
                {
                    lct = obj.objNuocDen.TenNuoc;
                }
                else
                    lct = string.Format("{0}, {1}", lct, obj.objNuocDen.TenNuoc);
            }
            return lct;
        }

        IList<VnsThanhVien> _DanhSachThanhVien;
        [DataMember]
        public IList<VnsThanhVien> DanhSachThanhVien
        {
            get { return _DanhSachThanhVien; }
            set { _DanhSachThanhVien = value; }
        }
        IList<VnsLichCongTac> _DanhSachLichCongTac;
        [DataMember]
        public IList<VnsLichCongTac> DanhSachLichCongTac
        {
            get { return _DanhSachLichCongTac; }
            set { _DanhSachLichCongTac = value; }
        }
        IList<VnsQuyetToanDoan> _DanhSachQuyetToanDoan;
        [DataMember]
        public IList<VnsQuyetToanDoan> DanhSachQuyetToanDoan
        {
            get { return _DanhSachQuyetToanDoan; }
            set { _DanhSachQuyetToanDoan = value; }
        }

        IList<VnsDuToanDoan> _DanhSachDuToanDoan;
        [DataMember]
        public IList<VnsDuToanDoan> DanhSachDuToanDoan
        {
            get { return _DanhSachDuToanDoan; }
            set { _DanhSachDuToanDoan = value; }
        }

        private string _TbQuyetToanExt = string.Empty;
        public string TbQuyetToanExt
        {
            get { return _TbQuyetToanExt; }
            set { _TbQuyetToanExt = value; }
        }


        public static int CompareIdBanDau(VnsDoanCongTac x, VnsDoanCongTac y)
        {
            try
            {
                if (x == null)
                {
                    if (y == null)
                    {
                        // If x is null and y is null, they're
                        // equal. 
                        return 0;
                    }
                    else
                    {
                        // If x is null and y is not null, y
                        // is greater. 
                        return -1;
                    }
                }
                else
                {
                    // If x is not null...
                    //
                    if (y == null)
                    // ...and y is null, x is greater.
                    {
                        return 1;
                    }
                    else
                    {
                        // ...and y is not null, compare the 
                        // lengths of the two strings.
                        //
                        if (x.IdBanDau == y.IdBanDau && x.Id == y.Id) return 0;

                        int retvalSoQuyetToan = 0;
                        //int revalSoChungTu = 0;
                        retvalSoQuyetToan = x.IdBanDau.CompareTo(y.IdBanDau);
                        if (retvalSoQuyetToan == 0)
                        {
                            if (x.Id == x.IdBanDau) return -1;
                            if (y.Id == y.IdBanDau) return 1;

                            retvalSoQuyetToan = x.id.CompareTo(y.Id);
                        }

                        return retvalSoQuyetToan;
                    }
                }
            }
            catch
            {
                return 0;
            }
            
        }
	}

    
}
