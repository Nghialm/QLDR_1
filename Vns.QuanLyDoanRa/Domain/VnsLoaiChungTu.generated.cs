/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.QuanLyDoanRa.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	
	[Serializable]
	[DataContract(Namespace ="http://Vns.QuanLyDoanRa",IsReference=true)]
	public partial class VnsLoaiChungTu : DomainObject<Guid>, INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }		
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private Guid _loaichungtuid; 
		private string _maloaichungtu; 
		private string _ten; 
		private int _loaiphieu; 
		private string _matkno; 
		private string _matkco; 
		private string _mota;
        private string _mauSoCt;
        private string _duongDan;
        private string _MaDmCha;
        private Guid _IdDmCha;
        private int _IsTrangThai;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public VnsLoaiChungTu()
		{
				_loaichungtuid =  new Guid(); 
				_maloaichungtu =  String.Empty; 
				_ten =  String.Empty; 
				_loaiphieu = 0; 
				_matkno =  String.Empty; 
				_matkco =  String.Empty; 
				_mota =  String.Empty;
                _mauSoCt = String.Empty;
                _duongDan = string.Empty;
                _IsTrangThai = 0;
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		


        [DataMember]
        public string MaDmCha
        {
            get { return _MaDmCha; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for MaDmCha", value, value.ToString());

                _isChanged |= (_MaDmCha != value); _MaDmCha = value;
            }
        }

		[DataMember]
		public  Guid LoaiChungTuId
		{
			get { return _loaichungtuid; }
			set { _isChanged |= (_loaichungtuid != value); _loaichungtuid = value; }
			}

        [DataMember]
        public Guid IdDmCha
        {
            get { return _IdDmCha; }
            set { _isChanged |= (_IdDmCha != value); _IdDmCha = value; }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaLoaiChungTu
		{
			get { return _maloaichungtu; }
			set	
			{
				if ( value != null)
					if( value.Length > 32)
						throw new ArgumentOutOfRangeException("Invalid value for MaLoaiChungTu", value, value.ToString());
				
				_isChanged |= (_maloaichungtu != value); _maloaichungtu = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string Ten
		{
			get { return _ten; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for Ten", value, value.ToString());
				
				_isChanged |= (_ten != value); _ten = value;
			}
			}


        [DataMember]
        public string DuongDan
        {
            get { return _duongDan; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for DuongDan", value, value.ToString());

                _isChanged |= (_duongDan != value); _duongDan = value;
            }
        }

		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  int LoaiPhieu
		{
			get { return _loaiphieu; }
			set { _isChanged |= (_loaiphieu != value); _loaiphieu = value; }
			}

        [DataMember]
        public int IsTrangThai
        {
            get { return _IsTrangThai; }
            set { _isChanged |= (_IsTrangThai != value); _IsTrangThai = value; }
        }
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaTkNo
		{
			get { return _matkno; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for MaTkNo", value, value.ToString());
				
				_isChanged |= (_matkno != value); _matkno = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MaTkCo
		{
			get { return _matkco; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
						throw new ArgumentOutOfRangeException("Invalid value for MaTkCo", value, value.ToString());
				
				_isChanged |= (_matkco != value); _matkco = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string MoTa
		{
			get { return _mota; }
			set	
			{
				if ( value != null)
					if( value.Length > 512)
						throw new ArgumentOutOfRangeException("Invalid value for MoTa", value, value.ToString());
				
				_isChanged |= (_mota != value); _mota = value;
			}
			}

        [DataMember]
        public string MauSoCt
        {
            get { return _mauSoCt; }
            set
            {
                if (value != null)
                    if (value.Length > 512)
                        throw new ArgumentOutOfRangeException("Invalid value for MoTa", value, value.ToString());

                _isChanged |= (_mauSoCt != value); _mauSoCt = value;
            }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		
		#endregion
		
		
		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			VnsLoaiChungTu castObj = (VnsLoaiChungTu)obj; 
			return ( castObj != null ) &&
				( this._loaichungtuid == castObj.LoaiChungTuId);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _loaichungtuid.GetHashCode();
			return hash; 
		}
		#endregion
		
	}
}
