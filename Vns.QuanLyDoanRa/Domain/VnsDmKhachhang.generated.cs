/*
insert license info here
*/
using System;
using System.ComponentModel;
using Vns.Erp.Core.Domain;
using System.Runtime.Serialization;
namespace Vns.QuanLyDoanRa.Domain
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping adapted by Gustavo And Modified By Hoang Quoc Dung
	/// </summary>

	
	[Serializable]
	[DataContract(Namespace ="http://Vns.QuanLyDoanRa",IsReference=true)]
	public partial class VnsDmKhachHang : DomainObject<Guid>, INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
        private void NotifyPropertyChanged(String propertyName)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }		
		#region Private Members
		private bool _isChanged;
		private bool _isDeleted;
		private Guid _KhachHangId; 
		private string _TenKhachHang; 
		private string _MaDvqhns; 	
        private string _DiaChi; 
		private string _SoTaiKhoan; 
        private string _MaCTMT; 
		private string _GhiChu1; 
        private string _GhiChu2;
        private string _MaKhachHang;
		#endregion
		
		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
        public VnsDmKhachHang()
		{
				_KhachHangId =  new Guid(); 
				_TenKhachHang =  String.Empty; 
				_MaDvqhns =  String.Empty;
                _DiaChi = String.Empty;
                _SoTaiKhoan = String.Empty;
                _MaCTMT = String.Empty;
                _GhiChu1 = String.Empty;
                _GhiChu2 = String.Empty; 
				
		}
		#endregion // End of Default ( Empty ) Class Constuctor
		
		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  Guid KhachHangId
		{
			get { return _KhachHangId; }
            set { _isChanged |= (_KhachHangId != value); _KhachHangId = value; }
			}


        [DataMember]
        public string MaKhachHang
        {
            get { return _MaKhachHang; }
            set
            {
                if (value != null)
                    if (value.Length > 256)
                        throw new ArgumentOutOfRangeException("Invalid value for MaKhachHang", value, value.ToString());

                _isChanged |= (_MaKhachHang != value); _MaKhachHang = value;
            }
        }

		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
		public  string TenKhachHang
		{
			get { return _TenKhachHang; }
			set	
			{
				if ( value != null)
					if( value.Length > 256)
                        throw new ArgumentOutOfRangeException("Invalid value for TenKhachHang", value, value.ToString());

                _isChanged |= (_TenKhachHang != value); _TenKhachHang = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
		
		[DataMember]
        public string MaDvqhns
		{
			get { return _MaDvqhns; }
			set	
			{
				if ( value != null)
					if( value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for MaDvqhns", value, value.ToString());

                _isChanged |= (_MaDvqhns != value); _MaDvqhns = value;
			}
			}
			
			
		/// <summary>
		/// 
		/// </summary>		
        [DataMember]
        public string DiaChi
        {
            get { return _DiaChi; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for DiaChi", value, value.ToString());

                _isChanged |= (_DiaChi != value); _DiaChi = value;
            }
        }

        [DataMember]
        public string SoTaiKhoan
        {
            get { return _SoTaiKhoan; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for SoTaiKhoan", value, value.ToString());

                _isChanged |= (_SoTaiKhoan != value); _SoTaiKhoan = value;
            }
        }

        [DataMember]
        public string MaCTMT
        {
            get { return _MaCTMT; }
            set
            {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for MaCTMT", value, value.ToString());

                _isChanged |= (_MaCTMT != value); _MaCTMT = value;
            }
        }

        [DataMember]
        public string GhiChu1
        {
            get { return _GhiChu1; }
            set
            {
                if (value != null)
                    if (value.Length > 256)
                        throw new ArgumentOutOfRangeException("Invalid value for GhiChu1", value, value.ToString());

                _isChanged |= (_GhiChu1 != value); _GhiChu1 = value;
            }
        }

        [DataMember]
        public string GhiChu2
        {
            get { return _GhiChu2; }
            set
            {
                if (value != null)
                    if (value.Length > 256)
                        throw new ArgumentOutOfRangeException("Invalid value for GhiChu2", value, value.ToString());

                _isChanged |= (_GhiChu2 != value); _GhiChu2 = value;
            }
        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return _isChanged; }
		}
		
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsDeleted
		{
			get { return _isDeleted; }
		}
		
		#endregion 
		
		
		#region Public Functions
		
		/// <summary>
		/// mark the item as deleted
		/// </summary>
		public void MarkAsDeleted()
		{
			_isDeleted = true;
			_isChanged = true;
		}
		
		
		#endregion
		
		
		#region Equals And HashCode Overrides
		/// <summary>
		/// local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			VnsDmKhachHang castObj = (VnsDmKhachHang)obj; 
			return ( castObj != null ) &&
				( this._KhachHangId == castObj.KhachHangId);
		}
		
		/// <summary>
		/// local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * _KhachHangId.GetHashCode();
			return hash; 
		}
		#endregion
		
	}
}
